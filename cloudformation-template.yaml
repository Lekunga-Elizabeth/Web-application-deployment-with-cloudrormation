# Create a VPC 
Resources:
  My-web-VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: My-web-VPC

# Create a subnet
  My-web-subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref My-web-VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: us-east-1
      Tags:
        - Key: Name
          Value: My-web-subnet

#Create Security Group for the Load balancer
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref My-web-VPC
      GroupDescription: security group for Load balancer
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80 # we open port 80 to allow traffic internet 
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: # this creat us the out bound rules
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          DestinationSecurityGroupId: !Ref MyEC2SecurityGroup
      Tags:
      - Key: Name
        Value: elb-db-sg

# Create Security Group for our Ec2 Instance 
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref My-web-VPC
      GroupDescription: security group for Ec2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80 
          ToPort: 80
          SourceSecurityGroupId: !Ref MyELBSecurityGroup
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306 # this is a default port for my sql
          DestinationSecurityGroupId: !Ref MyRDSSecurityGroup
      Tags:
      - Key: Name
        Value: ec2-sg

  # Create Security Group for RDS
  MyRDSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: "Security group for the RDS database"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref MyEC2SecurityGroup
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: t2.micro
      ImageId: ami-02396cdd13e9a1257 # Use a suitable Amazon Machine Image (AMI) for your region and requirements
      KeyName: workers-keypair # Replace with your own key pair name
      SecurityGroupIds:
        - sg-01a508bc795920855 # Replace with your own security group ID
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd.service
          systemctl enable httpd.service
      
      Tags:
        - Key: Name
          Value: family-instance

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 
    Key: keyname
    Value: db-security-group
 
  rdsDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 1
      DBInstanceClass: db.t2.medium
      AllowMajorVersionUpgrade: false # this means if you want to keep a version of your db
      AutoMinorVersionUpgrade: false
      AvailabilityZone: us-east-1
      DBInstanceIdentifier: database-1
      DBName: workers-databebase
      DBSecurityGroups: 
        - db-sg-group
      DBSnapshotIdentifier: 
      DBSubnetGroupName: 
      Engine: aurora
      EngineVersion: "5.6.10a"
      Iops: 
      KmsKeyId: 
      LicenseModel: 
      MasterUsername: admin
      MasterUserPassword: compudemy
      MultiAZ: true|false
      OptionGroupName: 
      Port: 
      PreferredBackupWindow: 
      PreferredMaintenanceWindow: 
      PubliclyAccessible: true|false
      SourceDBInstanceIdentifier: 
      StorageEncrypted: true|false
      StorageType: 
      VPCSecurityGroups:
        - vpc-sg-id
      Tags:
        - Key: keyname
          Value: value

